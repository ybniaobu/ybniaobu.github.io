<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python编程从入门到实践学习笔记</title>
      <link href="/2022/09/09/Python%E7%BC%96%E7%A8%8B%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/09/09/Python%E7%BC%96%E7%A8%8B%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>该笔记为 <strong>《Python编程从入门到实践》</strong> 的读书笔记，未经过系统的整理；<br>该笔记涉及的内容较为基础，可能含有大量废话；<br>学习完成日期为2021年12月13日。</p></blockquote><p><img src="https://s2.loli.net/2022/09/09/F45BwnLIjXxVCtT.png" alt="Python编程从入门到实践"></p><h1 id="第-1-章-起步"><a href="#第-1-章-起步" class="headerlink" title="第 1 章　起步"></a>第 1 章　起步</h1><ol><li>命令窗口<ul><li>在命令窗口中，要在文件系统中导航，可使用终端命令cd(change directory,即切换目录)</li><li>使用命令dir（表示directory，即目录）可列出当前目录中的所有文件</li></ul></li><li>在终端会话中运行Python文件hello_world.py，请执行下面的命令：<ul><li>第一步  <code>C:\&gt; cd Desktop\python_work</code></li><li>第二步  <code>C:\Desktop\python_work&gt; dir</code> 找到hello_world.py</li><li>第三步  <code>C:\Desktop\python_work&gt; python hello_world.py</code> 得到输出<code>Hello Python world!</code></li></ul></li><li>其他注意事项<ul><li>区分语句、函数、方法</li><li>语句 比如if、while、del等</li><li>函数 比如print()等</li><li>方法 比如list.pop()等</li></ul></li></ol><h1 id="第-2-章-变量和简单数据类型"><a href="#第-2-章-变量和简单数据类型" class="headerlink" title="第 2 章　变量和简单数据类型"></a>第 2 章　变量和简单数据类型</h1><h2 id="一、变量名赋值的注意事项"><a href="#一、变量名赋值的注意事项" class="headerlink" title="一、变量名赋值的注意事项"></a>一、变量名赋值的注意事项</h2><ul><li>变量名只能包含字母、数字和下划线。变量名可以字母或下划线打头，但不能以数字打头，例如，可将变量命名为<code>message_1</code>，但不能将其命名为<code>1_message</code>。</li><li>变量名不能包含空格，但可使用下划线来分隔其中的单词。例如，变量名<code>greeting_message</code>可行，但变量名<code>greeting message</code>会引发错误。</li><li>不要将Python关键字和函数名用作变量名，即不要使用Python保留用于特殊用途的单词，如print。</li><li>就目前而言，应使用小写的Python变量名。在变量名中使用大写字母虽然不会导致错误，但避免使用大写字母是个不错的主意。</li><li>若变量为常量，最好将变量名全部大写：<code>MAX_CONNECTIONS= 5000</code></li><li><strong>多个变量赋值：<code>x, y, z= &quot;a&quot;, 10, &quot;b&quot;</code></strong></li></ul><h2 id="二、用方法修改字符串的大小写"><a href="#二、用方法修改字符串的大小写" class="headerlink" title="二、用方法修改字符串的大小写"></a>二、用方法修改字符串的大小写</h2><ul><li>首字母大写（其他都变小写）：<code>str.title()</code></li><li>总结：全部大写：<code>str.upper()</code></li><li>总结：全部小写：<code>str.lower()</code></li><li>说明：方法 <code>title()</code> 出现在这个变量的后面。方法是Python可对数据执行的操作。在 <code>name.title()</code> 中，name 后面的句点（. ）让Python对变量name 执行方法 <code>title()</code> 指定的操作。每个方法后面都跟着一对括号，这是因为方法通常需要额外的信息来完成其工作。这种信息是在括号内提供的。函数 <code>title()</code> 不需要额外的信息，因此它后面的括号是空的。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name= <span class="string">&quot;aDA lovelace&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(name.title()) <span class="comment"># 注：这三个方法不改变变量的值，与列表list的方法不同</span></span><br><span class="line"><span class="built_in">print</span>(name.upper())</span><br><span class="line"><span class="built_in">print</span>(name.lower())</span><br></pre></td></tr></table></figure><p>输出结果如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Ada Lovelace</span><br><span class="line">ADA LOVELACE</span><br><span class="line">ada lovelace</span><br></pre></td></tr></table></figure><h2 id="三、在f字符串中使用变量"><a href="#三、在f字符串中使用变量" class="headerlink" title="三、在f字符串中使用变量"></a>三、在f字符串中使用变量</h2><ul><li><code>variate0 = f&quot;&#123;variate1&#125;&quot;</code> 这个方法主要用于在字符串中使用变量的值。</li><li>说明：这种字符串叫f字符串。f是format（设置格式）的缩写，把花括号内的变量替换为其值来设置字符串的格式。</li><li>f字符串是python3.6引入的。之前的方法是<code>format()</code>，比如：<code>full_name = &quot;&#123;&#125;&#123;&#125;&quot;.format(last_name, first_name)</code>，这2方法都可以用。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">last_name = <span class="built_in">input</span>(<span class="string">&quot;您的姓:&quot;</span>)</span><br><span class="line">first_name = <span class="built_in">input</span>(<span class="string">&quot;您的名:&quot;</span>)</span><br><span class="line">full_name = <span class="string">f&quot;<span class="subst">&#123;last_name&#125;</span><span class="subst">&#123;first_name&#125;</span>&quot;</span>  <span class="comment"># 或者是 full_name = &quot;&#123;&#125;&#123;&#125;&quot;.format(last_name, first_name)</span></span><br><span class="line"><span class="built_in">print</span>(full_name + <span class="string">&quot;您好！&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="四、使用制表符或换行符"><a href="#四、使用制表符或换行符" class="headerlink" title="四、使用制表符或换行符"></a>四、使用制表符或换行符</h2><ul><li><code>\t</code>：制表符，t:tablet；<code>\n</code>：换行符，n:newline</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Languages:\n\tPython\n\tC\n\tJavaScript&quot;</span>)</span><br></pre></td></tr></table></figure><p>输出结果如下：  </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Languages:</span><br><span class="line">        Python</span><br><span class="line">        C</span><br><span class="line">        JavaScript</span><br></pre></td></tr></table></figure><h2 id="五、用方法删除字符串中空白"><a href="#五、用方法删除字符串中空白" class="headerlink" title="五、用方法删除字符串中空白"></a>五、用方法删除字符串中空白</h2><ul><li>删除字符串末尾的空白：<code>str.rstrip() </code></li><li>删除字符串开头的空白：<code>str.lstrip() </code></li><li>删除字符串两边的空白：<code>str.strip()</code></li><li>替换字符串中的特定字符：<code>str = str.replace(&#39;被替换字符&#39;, &#39;替换字符&#39;)</code></li><li><code>str.rstrip([chars])</code> chars：指定删除的字符（默认为空白符，包括空格、换行符\n、回车符、制表符\t）</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">random_string = <span class="string">&#x27;this is good    &#x27;</span></span><br><span class="line"><span class="built_in">print</span>(random_string.rstrip()) <span class="comment"># 字符串末尾的空格会被删除</span></span><br><span class="line"><span class="built_in">print</span>(random_string.rstrip(<span class="string">&#x27;si oo&#x27;</span>)) <span class="comment"># &#x27;si oo&#x27; 不是尾随字符，因此不会删除任何内容</span></span><br><span class="line"><span class="built_in">print</span>(random_string.rstrip(<span class="string">&#x27;sid oo&#x27;</span>)) <span class="comment"># 在 &#x27;sid oo&#x27; 中 &#x27;d oo&#x27; 是尾随字符，&#x27;ood&#x27; 从字符串中删除</span></span><br><span class="line">website = <span class="string">&#x27;www.runoob.com/&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(website.rstrip(<span class="string">&#x27;m/.&#x27;</span>)) <span class="comment"># &#x27;m/&#x27; 是尾随字符，没有找到 &#x27;.&#x27; 号的尾随字符, &#x27;m/&#x27; 从字符串中删除</span></span><br></pre></td></tr></table></figure><p>输出结果如下：  </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">this is good</span><br><span class="line">this is good</span><br><span class="line">this is g</span><br><span class="line">www.runoob.co</span><br></pre></td></tr></table></figure><h2 id="六、数与算术运算符"><a href="#六、数与算术运算符" class="headerlink" title="六、数与算术运算符"></a>六、数与算术运算符</h2><ul><li><code>%</code>：取模 - 返回除法的余数</li><li><code>**</code>：幂 - 返回x的y次幂</li><li><code>//</code>：取整除 - 返回商的整数部分（向下取整）</li><li>相等运算符：<code>==</code>；不等运算符：<code>!=</code></li><li><code>&lt;= </code> <code>&gt;=</code></li><li>Python默认得到的总是浮点数，即使结果本为整数也是如此</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">c= <span class="number">8</span>/<span class="number">4</span></span><br><span class="line"><span class="built_in">print</span>(c)</span><br></pre></td></tr></table></figure><p>输出结果如下：  </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2.0</span><br></pre></td></tr></table></figure><ul><li>数中的下划线相当于平时书写的逗号，让数字更加清晰，Python不会打印其中的下划线（Python3.6以上版本）</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">d= <span class="number">14_000_000_000</span></span><br><span class="line"><span class="built_in">print</span>(d)</span><br></pre></td></tr></table></figure><p>输出结果如下：  </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">14000000000</span><br></pre></td></tr></table></figure><h1 id="第-3-章-列表简介"><a href="#第-3-章-列表简介" class="headerlink" title="第 3 章　列表简介"></a>第 3 章　列表简介</h1><h2 id="一、列表与列表索引"><a href="#一、列表与列表索引" class="headerlink" title="一、列表与列表索引"></a>一、列表与列表索引</h2><ul><li>列表是可以修改的</li><li>列表（list）用方括号（[ ]）来表示，索引即在方括号内加0、1、2……或者-1、-2、-3…….</li><li>访问列表元素：将该元素的位置或索引告诉Python</li><li>在Python中，第一个列表元素的索引为0，而不是1。在大多数编程语言中都是如此，这与列表操作的底层实现相关。</li><li>将索引指定为-1，-2，-3…..可返回最后的元素、倒数第二个列表元素、倒数第三个列表元素，以此类推。</li><li>可以用f字符串使用列表中的各个值</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">bicycles = [<span class="string">&#x27;trek&#x27;</span>, <span class="string">&#x27;cannondale&#x27;</span>, <span class="string">&#x27;redline&#x27;</span>, <span class="string">&#x27;specialized&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(bicycles[<span class="number">0</span>].title())</span><br><span class="line"><span class="built_in">print</span>(bicycles[-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">message = <span class="string">f&quot;My first bicycle was a <span class="subst">&#123;bicycles[<span class="number">0</span>].title()&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">print</span>(message)</span><br></pre></td></tr></table></figure><p>输出结果如下：  </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Trek</span><br><span class="line">specialized</span><br><span class="line">My first bicycle was a Trek</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> python入门学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown教程</title>
      <link href="/2022/09/07/markdown/"/>
      <url>/2022/09/07/markdown/</url>
      
        <content type="html"><![CDATA[<h1 id="VSCode-编辑器"><a href="#VSCode-编辑器" class="headerlink" title="VSCode 编辑器"></a>VSCode 编辑器</h1><p>1、VSCode 默认集成了 Markdown 文档编辑插件，原生就支持高亮 Markdown 的语法。<br>2、VSCode 实时预览需要执行 Markdown: Open Preview to the Side 命令来实现。   </p><h1 id="Markdown-标题"><a href="#Markdown-标题" class="headerlink" title="Markdown 标题"></a>Markdown 标题</h1><p>使用 # 号可表示 1-6 级标题，一级标题对应一个 # 号，二级标题对应两个 # 号，以此类推。</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></table></figure><p>显示效果如下：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h1 id="Markdown-格式"><a href="#Markdown-格式" class="headerlink" title="Markdown 格式"></a>Markdown 格式</h1><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p>Markdown 可以使用以下几种字体：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="emphasis">*斜体文本*</span></span><br><span class="line"><span class="emphasis">_斜体文本_</span></span><br><span class="line"><span class="strong">**粗体文本**</span></span><br><span class="line"><span class="strong">__粗体文本__</span></span><br><span class="line"><span class="strong">**<span class="emphasis">*粗斜体文本*</span>**</span></span><br><span class="line"><span class="strong">__<span class="emphasis">_粗斜体文本_</span>__</span></span><br></pre></td></tr></table></figure><p>显示效果如下：<br><em>斜体文本</em><br><em>斜体文本</em><br><strong>粗体文本</strong><br><strong>粗体文本</strong><br><em><strong>粗斜体文本</strong></em><br><em><strong>粗斜体文本</strong></em></p><h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><p>1、Markdown 段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个以上空格；<br>2、或者在段落后面使用一个空行来表示重新开始一个段落。</p><h2 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h2><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br><span class="line"><span class="emphasis"><span class="strong"></span></span></span><br><span class="line"><span class="emphasis"><span class="strong">*</span> <span class="emphasis">* *</span></span></span><br><span class="line"><span class="strong"></span></span><br><span class="line"><span class="strong">**</span><span class="strong">**<span class="emphasis">*</span></span></span><br><span class="line"><span class="emphasis"><span class="strong"></span></span></span><br><span class="line"><span class="emphasis"><span class="strong">- - -</span></span></span><br><span class="line"><span class="emphasis"><span class="strong"></span></span></span><br><span class="line"><span class="emphasis"><span class="strong">----------</span></span></span><br></pre></td></tr></table></figure><p>显示效果如下：  </p><hr><hr><hr><hr><hr><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 ~~ ：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">~~带删除线文本~~</span><br></pre></td></tr></table></figure><p>显示效果如下：<br><del>带删除线文本</del></p><h2 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h2><p>下划线可以通过 HTML 的 &lt;u&gt; 标签来实现：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>带下划线文本<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>显示效果如下：<br><u>带下划线文本</u>  </p><h1 id="Markdown-列表"><a href="#Markdown-列表" class="headerlink" title="Markdown 列表"></a>Markdown 列表</h1><p>Markdown 支持有序列表和无序列表。</p><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><p>无序列表使用星号(*)、加号(+)或是减号(-)作为列表标记，这些标记后面要添加一个空格，然后再填写内容：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">*</span> 第一项</span><br><span class="line"><span class="bullet">*</span> 第二项</span><br><span class="line"><span class="bullet">*</span> 第三项</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> 第一项</span><br><span class="line"><span class="bullet">+</span> 第二项</span><br><span class="line"><span class="bullet">+</span> 第三项</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 第一项</span><br><span class="line"><span class="bullet">-</span> 第二项</span><br><span class="line"><span class="bullet">-</span> 第三项</span><br></pre></td></tr></table></figure><p>显示效果如下： </p><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><p>有序列表使用数字并加上 . 号来表示：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 第一项</span><br><span class="line"><span class="bullet">2.</span> 第二项</span><br><span class="line"><span class="bullet">3.</span> 第三项</span><br></pre></td></tr></table></figure><p>显示效果如下： </p><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol><h2 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h2><p>列表嵌套只需在子列表中的选项前面添加两个或四个空格即可：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 第一项：</span><br><span class="line"><span class="bullet">    -</span> 第一项嵌套的第一个元素</span><br><span class="line"><span class="bullet">    -</span> 第一项嵌套的第二个元素</span><br><span class="line"><span class="bullet">2.</span> 第二项：</span><br><span class="line"><span class="bullet">    -</span> 第二项嵌套的第一个元素</span><br><span class="line"><span class="bullet">    -</span> 第二项嵌套的第二个元素</span><br></pre></td></tr></table></figure><p>显示效果如下： </p><ol><li>第一项：<ul><li>第一项嵌套的第一个元素</li><li>第一项嵌套的第二个元素</li></ul></li><li>第二项：<ul><li>第二项嵌套的第一个元素</li><li>第二项嵌套的第二个元素</li></ul></li></ol><h1 id="Markdown-区块"><a href="#Markdown-区块" class="headerlink" title="Markdown 区块"></a>Markdown 区块</h1><h2 id="区块和区块嵌套"><a href="#区块和区块嵌套" class="headerlink" title="区块和区块嵌套"></a>区块和区块嵌套</h2><p>Markdown 区块引用是在段落开头使用 &gt; 符号 ，然后后面紧跟一个空格符号：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 区块内容</span></span><br><span class="line"></span><br><span class="line">// 区块嵌套</span><br><span class="line"><span class="quote">&gt; 第一层</span></span><br><span class="line"><span class="quote">&gt; &gt; 第二层</span></span><br><span class="line"><span class="quote">&gt; &gt; &gt; 第三层</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示效果如下： </p><blockquote><p>区块内容</p></blockquote><blockquote><p>第一层</p><blockquote><p>第二层</p><blockquote><p>第三层</p></blockquote></blockquote></blockquote><h2 id="区块中使用列表"><a href="#区块中使用列表" class="headerlink" title="区块中使用列表"></a>区块中使用列表</h2><p>区块中使用列表：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 区块中使用列表</span></span><br><span class="line"><span class="quote">&gt; 1. 第一项</span></span><br><span class="line"><span class="quote">&gt; 2. 第二项</span></span><br></pre></td></tr></table></figure><p>显示效果如下： </p><blockquote><p>区块中使用列表</p><ol><li>第一项</li><li>第二项</li></ol></blockquote><h2 id="列表中使用区块"><a href="#列表中使用区块" class="headerlink" title="列表中使用区块"></a>列表中使用区块</h2><p>如果要在列表项目内放进区块，最好在 &gt; 前添加四个空格的缩进：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">*</span> 第一项</span><br><span class="line"><span class="code">    &gt; 区块内容</span></span><br><span class="line"><span class="code">* 第二项</span></span><br><span class="line"><span class="code">&gt; 区块内容</span></span><br></pre></td></tr></table></figure><p>显示效果如下： </p><ul><li>第一项<blockquote><p>区块内容</p></blockquote></li><li>第二项<blockquote><p>区块内容</p></blockquote></li></ul><h1 id="Markdown-代码"><a href="#Markdown-代码" class="headerlink" title="Markdown 代码"></a>Markdown 代码</h1><h2 id="一个函数或片段的代码"><a href="#一个函数或片段的代码" class="headerlink" title="一个函数或片段的代码"></a>一个函数或片段的代码</h2><p>用反引号把它包起来（&#96;）：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="code">`printf()`</span> 函数</span><br></pre></td></tr></table></figure><p>显示效果如下：<br><code>printf()</code> 函数</p><h2 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h2><p>用 &#96;&#96;&#96; 包裹一段代码，并指定一种语言（也可以不指定）：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="code">``` python</span></span><br><span class="line"><span class="code">s = &quot;Python hello world！&quot;</span></span><br><span class="line"><span class="code">print(s)</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure><p>显示效果如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = <span class="string">&quot;Python hello world！&quot;</span></span><br><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure><h1 id="Markdown-链接"><a href="#Markdown-链接" class="headerlink" title="Markdown 链接"></a>Markdown 链接</h1><p>链接使用方法如下：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">百度</span>](<span class="link">http://www.baidu.com</span>)</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line"><span class="language-xml">&lt;http://www.baidu.com&gt;</span></span><br></pre></td></tr></table></figure><p>显示效果如下：<br><a href="http://www.baidu.com/">百度</a></p><p>或者</p><p><a href="http://www.baidu.com/">http://www.baidu.com</a></p><h1 id="Markdown-图片"><a href="#Markdown-图片" class="headerlink" title="Markdown 图片"></a>Markdown 图片</h1><p>Markdown 图片语法格式如下：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">图片名称</span>](<span class="link">https://s2.loli.net/2022/09/09/y8KgN7EbOkPIucL.jpg</span>)</span><br><span class="line">![<span class="string">图片名称</span>](<span class="link">https://s2.loli.net/2022/09/09/y8KgN7EbOkPIucL.jpg &quot;可选标题&quot;</span>)</span><br><span class="line">//可选标题需要鼠标悬浮在图片上，即显示</span><br></pre></td></tr></table></figure><p>带可选标题显示效果如下：<br><img src="https://s2.loli.net/2022/09/09/y8KgN7EbOkPIucL.jpg" alt="图片名称" title="可选标题"><br>不带可选标题显示效果如下：<br><img src="https://s2.loli.net/2022/09/09/y8KgN7EbOkPIucL.jpg" alt="图片名称"></p><h1 id="Markdown-表格"><a href="#Markdown-表格" class="headerlink" title="Markdown 表格"></a>Markdown 表格</h1><p>制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行，还可以通过 : 设置表格的对齐方式：  </p><ul><li>-: 冒号在右边设置内容和标题栏居右对齐</li><li>:- 冒号在左边设置内容和标题栏居左对齐</li><li>:-:冒号在两边设置内容和标题栏居中对齐</li></ul><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| 左对齐 | 右对齐 | 居中对齐 |</span><br><span class="line">| :-----| ----: | :----: |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><p>显示效果如下：</p><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><h1 id="Markdown-高级技巧"><a href="#Markdown-高级技巧" class="headerlink" title="Markdown 高级技巧"></a>Markdown 高级技巧</h1><h2 id="支持的-HTML-元素"><a href="#支持的-HTML-元素" class="headerlink" title="支持的 HTML 元素"></a>支持的 HTML 元素</h2><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。<br>目前支持的 HTML 元素有：&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;等 ，如：  </p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用 <span class="language-xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>Ctrl<span class="language-xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span>+<span class="language-xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>Alt<span class="language-xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span>+<span class="language-xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>Del<span class="language-xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span> 重启电脑</span><br></pre></td></tr></table></figure><p>显示效果如下：<br>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p>]]></content>
      
      
      <categories>
          
          <category> 博客教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客教程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
